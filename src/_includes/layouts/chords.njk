---
layout: layouts/base.njk
templateClass: tmpl-chords
title: Chords
data: chords
---

<h2>Chords <a id="pullRightButton" href="https://github.com/statox/blog/blob/master/src/_data/chords.json" target="_blank" rel="noopener noreferrer"><button>Edit the list</button></a></h2>

{% set sortedChords = chords | sortChords | groupby("artist") %}
<div>
    <p>This is a list of {{chords.length}} song chords I have been gathering for the past 10 years and that I like to play.</p>
    <div id="index">
        <ul id="indexList"></ul>
    </div>
    <div>
        Search an artist or a title: <input id="searchInput" type="text" oninput="doSearch()">
    </div>
    <table>
        {% for artist, chords in sortedChords %}
        <tr class="datarow" data-values="{{artist}};{% for chord in chords %}{{ chord.title}};{% endfor %}">
            <td class="artist">{{artist}}
                <ul>
                    {% for chord in chords %}
                    <li class="datarow" data-values="{{artist}};{{ chord.title}}">
                        {% if '.doc' in chord.url %}
                        <span><a href="/docviewer?docurl={{chord.url}}" target="_blank" rel="noopener noreferrer" onclick="setupIframe('{{chord.url}}')">{{chord.title}}</a></span>
                        {% else %}
                        <span><a href="{{chord.url}}" target="_blank" rel="noopener noreferrer">{{chord.title}}</a></span>
                        {% endif %}
                    </li>
                    {% endfor %}
                </ul>
            </td>
        </tr>
        {% endfor %}
    </table>
    <a class="top-link hide" href="" id="js-top">
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 12 6"><path d="M12 6H0l6-6z"/></svg>
        <span class="screen-reader-text">Back to top</span>
    </a>
</div>

{% set inlineJS %}
      {% include "scripts/backToTopButton.js" %}
      {% include "scripts/chordsAlphabeticalIndex.js" %}
{% endset %}

<script>
    {{ inlineJS | safe }}

    // Dead simple search: We put the artist and title in the data-values tag for the rows
    // when a search is done we change the class of the rows depending on if the query matches the data
    function doSearch() {
        const searchStr = document.getElementById('searchInput').value;
        const tableLines = document.getElementsByClassName('datarow');
        for (const line of tableLines) {
            const values = line.dataset.values;
            if (values.toLowerCase().match(searchStr.toLowerCase())) {
                line.classList.remove('hidden');
            } else {
                line.classList.add('hidden');
            }
        }
    }
</script>
