---
layout: layouts/base.njk
templateClass: tmpl-post
---

<h2>{{ title }}</h2>

{{ content | safe }}

<p><a href="{{ '/' | url }}">← Posts</a></p>

<comments></comments>
<script type="text/javascript">
{# Script to inject comments based on github issues #}
{# Shamelessly taken from https://25.wf/posts/2020-06-21-comments.html #}
function domReady(fn) {
    document.addEventListener('DOMContentLoaded', fn);
    if (document.readyState === 'interactive' || document.readyState === 'complete') {
        fn();
    }
}

async function getComments(url = '') {
    const response = await fetch(url, {
        method: 'GET',
        mode: 'cors',
        cache: 'no-cache',
        headers: { Accept: 'application/vnd.github.v3.html+json' },
    });
    return response.json();
}

domReady(() => {
    const apiUrl = 'https://api.github.com/repos/statox/blog-comments/issues/{{commentIssueId}}/comments';
    const appendComments = function (comments) {
        const commentSection = document.querySelector('comments');
        if (!comments || !comments.forEach || comments.length === 0) {
            commentSection.insertAdjacentHTML('beforeend', '<p>No comments yet.</p>');
            return;
        }
        comments.forEach(function (comment) {
            commentSection.insertAdjacentHTML(
                'beforeend',
                '<div class="comment"> ✿\
                <a class="commenter" href="' +
                comment.user.html_url +
                '"\
                target="_blank">' +
                comment.user.login +
                '</a> on ' +
                new Date(comment.created_at).toUTCString() +
                comment.body_html +
                '</div>',
            );
        });
    };
    getComments(apiUrl).then(appendComments);
});
</script>
